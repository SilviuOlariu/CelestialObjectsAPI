// <auto-generated />
using System;
using CelestialCatalogAPI.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CelestialCatalogAPI.Migrations
{
    [DbContext(typeof(CelestialCatalogContext))]
    [Migration("20200811101551_initalMigration")]
    partial class initalMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CelestialCatalogAPI.Entities.CelestialObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DiscoveryDate");

                    b.Property<double>("EquatorialDiameter");

                    b.Property<double>("Mass");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("SurfaceTemperature");

                    b.HasKey("Id");

                    b.ToTable("CelestialObjects");
                });

            modelBuilder.Entity("CelestialCatalogAPI.Entities.DiscoverySource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CelestialObjectId");

                    b.Property<DateTime>("EstablishmentDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("StateOwner");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("CelestialObjectId");

                    b.ToTable("DiscoverySources");
                });

            modelBuilder.Entity("CelestialCatalogAPI.Entities.DiscoverySource", b =>
                {
                    b.HasOne("CelestialCatalogAPI.Entities.CelestialObject", "CelestialObject")
                        .WithMany("DiscoverySource")
                        .HasForeignKey("CelestialObjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
